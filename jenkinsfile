// pipeline {

//     parameters {
//         booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
//     } 
//     environment {
//         access_key_id     = credentials('access_key_id')
//         secret_access_key = credentials('secret_access_key')
//     }

//    agent  any
//     stages {
//         stage('checkout') {
//             steps {
//                  script{
//                         dir("terraform")
//                         {
//                             git url: "https://github.com/TonieO/Terraform-nginx-jenkins.git", branch: "main"
//                         }
//                     }
//                 }
//             }

//         stage('Plan') {
//             steps {
//                 sh 'pwd;cd terraform/ ; terraform init'
//                 sh "pwd;cd terraform/ ; terraform plan -out tfplan"
//                 sh 'pwd;cd terraform/ ; terraform show -no-color tfplan > tfplan.txt'
//             }
//         }
//         stage('Approval') {
//            when {
//                not {
//                    equals expected: true, actual: params.autoApprove
//                }
//            }

//            steps {
//                script {
//                     def plan = readFile 'terraform/tfplan.txt'
//                     input message: "Do you want to apply the plan?",
//                     parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
//                }
//            }
//        }

//         stage('Apply') {
//             steps {
//                 sh "pwd;cd terraform/ ; terraform apply -input=false tfplan"
//             }
//         }
//     }

//   }


pipeline {
    parameters {
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    } 
    environment {
        access_key_id     = credentials('access_key_id')
        secret_access_key = credentials('secret_access_key')
    }

    agent any
    stages {
        stage('Checkout') {
            steps {
                script {
                    // Corrected the 'dir' command to properly use it
                    dir("terraform") {
                        // Specified 'branch: "main"' in quotes to avoid errors
                        git url: "https://github.com/TonieO/Terraform-nginx-jenkins.git", branch: "main"
                    }
                }
            }
        }

        stage('Plan') {
            steps {
                // Removed the redundant 'pwd' command; 'cd' within 'sh' will keep the working directory
                dir('terraform') {
                    sh 'terraform init'
                    sh 'terraform plan -out=tfplan'
                    sh 'terraform show -no-color tfplan > tfplan.txt'
                }
            }
        }

        stage('Approval') {
            when {
                not {
                    equals expected: true, actual: params.autoApprove
                }
            }
            steps {
                script {
                    def plan = readFile 'terraform/tfplan.txt'
                    input message: "Do you want to apply the plan?", 
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                }
            }
        }

        stage('Apply') {
            steps {
                dir('terraform') {
                    sh 'terraform apply -input=false tfplan'
                }
            }
        }
    }
}
